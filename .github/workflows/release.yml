name: Release Template

on:
  push:
    branches:
      - main
    paths:
      - 'pyproject.toml'  # Only trigger when version changes

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml

      - name: Get project version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          echo "PROJECT_VERSION=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Detected template version: ${VERSION}"

      - name: Check if tag already exists
        id: check_tag
        run: |
          VERSION="${{ steps.get_version.outputs.PROJECT_VERSION }}"
          if git rev-parse "refs/tags/${VERSION}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> "$GITHUB_OUTPUT"
            echo "Tag ${VERSION} already exists"
          else
            echo "TAG_EXISTS=false" >> "$GITHUB_OUTPUT"
            echo "Tag ${VERSION} does not exist, will create release"
          fi

      - name: Create GitHub Release
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.PROJECT_VERSION }}
          release_name: cookiecutter-henrylab v${{ steps.get_version.outputs.PROJECT_VERSION }}
          body: |
            ## Cookiecutter Template Release v${{ steps.get_version.outputs.PROJECT_VERSION }}
            
            This release contains updates to the cookiecutter template for scientific Python projects.
            
            ### Usage
            ```bash
            cookiecutter gh:chenry/cookiecutter-henrylab
            ```
            
            ### Changes
            See the [changelog](https://github.com/chenry/cookiecutter-henrylab/releases) for details.
          draft: false
          prerelease: false

      - name: Test cookiecutter template
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: |
          pip install cookiecutter
          cookiecutter --no-input . --output-dir test-output
          echo "Template generation successful!"
          ls -la test-output/
